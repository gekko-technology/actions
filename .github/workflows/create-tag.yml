# This workflow will set a generate a new tag for the service that needs to be deployed

name: Create tag

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      tag:
        description: "The tag that has been generated for the current build"
        value: ${{ jobs.create_tag.outputs.tag }}
      repo: 
        description: "The repo that hosts the service to be deployed"
        value: ${{ jobs.create_tag.outputs.repo }}
      target:
        description: "On which environment will the tag be used"
        value: ${{ jobs.create_tag.outputs.target }}

jobs:
  create_tag:
    runs-on: ubuntu-latest

    # Map the job outputs to step outputs
    outputs:
      tag: ${{ steps.create-tag.outputs.tag }}
      repo: ${{ steps.create-tag.outputs.repo }}
      target: ${{ steps.create-tag.outputs.target }}
    
    steps:
      - id: create-tag
        run: |
          if [[ ${GITHUB_REF_TYPE} == 'tag' ]]; then
            
            # RC OR PRODUCTION BUILD MODE
            
            GIT_TAG=$(echo ${GITHUB_REF_NAME})
            TARGET="preprod"
            
          else
            
            # DEVELOP / QA BUILD MODE
            # If branch name is feature/myfeature, only extract "myfeature"
            
            NOW=$(date '+%Y%m%d%H%M%S')
            
            GIT_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | awk -F'/' '{ print $NF}')
            GIT_TAG=$(echo ${GITHUB_REF#refs/heads/} | awk -F'/' '{ print $NF}')
            TARGET="develop"
            
            GIT_TAG+=$NOW
            
            # !!! SECURITY MEASURE: WE DON'T TRIGGER A DEPLOY IF PUSHING ON THE MAIN BRANCH
            if [[ $GIT_BRANCH == 'master' || $GIT_BRANCH == 'main' ]]; then
              echo "Workflow run on master/main branch, aborting."
              exit 1
            fi
          fi
          
          REPO=$(echo ${GITHUB_REPOSITORY} | awk -F'/' '{ print $NF}')
          
          echo "GIT_TAG: ${GIT_TAG}"
          echo "REPO: ${REPO}"
          echo "TARGET: ${TARGET}"
          
          echo "tag=$GIT_TAG" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT
          echo "target=$TARGET" >> $GITHUB_OUTPUT
